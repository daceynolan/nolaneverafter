{"version":3,"sources":["components/Header.js","components/Footer.js","components/Loader.js","components/CloseIcon.js","components/DownloadIcon.js","utils/photos.js","components/ModalActions.js","components/App.js","index.js"],"names":["Header","props","className","currentPhotoCount","totalPhotoCount","Footer","Loader","fill","viewBox","d","width","height","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","x1","y1","x2","y2","generatePhotoUrl","photoId","size","loadPhoto","src","Promise","resolve","img","Image","onload","onerror","ModalActions","modalProps","currentView","onClose","onClick","request","XMLHttpRequest","filename","substring","lastIndexOf","open","responseType","event","download","target","response","send","downloadPhoto","source","DownloadIcon","CloseIcon","App","useState","isLoading","setIsLoading","photos","setPhotos","lightboxIsOpen","setLightboxIsOpen","currentPhotoIndex","setCurrentPhotoIndex","useEffect","loadPhotos","length","nextPhotoUrls","Array","map","_","i","newPhotoId","filter","Boolean","all","then","newPhotos","concat","openLightbox","useCallback","index","throttle","threshold","hasMore","onLoadMore","closeOnEsc","hideControlsWhenIdle","components","currentIndex","views","photo","thumbnail","regular","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73f87f08.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = props => {\n  return (\n    <div className=\"header\">\n      <h1 className=\"header__title\">Nolan Wedding Photos</h1>\n      <div className=\"header__photo-count\">\n        {props.currentPhotoCount} out of {props.totalPhotoCount}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">Website made with love by the Bride and Groom!</div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\n// https://loading.io/css/\nconst Loader = () => {\n  return (\n    <div className=\"lds-heart\">\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\n\nexport default () => (\n  <svg fill=\"currentColor\" viewBox=\"0 0 24 24\">\n    <path d=\"M18.984 6.422l-5.578 5.578 5.578 5.578-1.406 1.406-5.578-5.578-5.578 5.578-1.406-1.406 5.578-5.578-5.578-5.578 1.406-1.406 5.578 5.578 5.578-5.578z\" />\n  </svg>\n);\n","import React from \"react\";\n\nexport default () => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\n    <polyline points=\"7 10 12 15 17 10\"></polyline>\n    <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>\n  </svg>\n);\n","import download from \"downloadjs\";\n\nexport const generatePhotoUrl = (photoId, size = \"thumbnails\") => {\n  return `https://s3-us-west-2.amazonaws.com/www.nolaneverafter.com/photos/${size}/nolaneverafter${photoId}.jpg`;\n};\n\nexport const loadPhoto = src => {\n  return new Promise(resolve => {\n    const img = new Image();\n    img.onload = () => resolve({ width: img.width, src, height: img.height });\n    img.onerror = () => resolve({});\n    img.src = src;\n  });\n};\n\nexport const downloadPhoto = src => {\n  const request = new XMLHttpRequest();\n  const filename = src.substring(src.lastIndexOf(\"/\") + 1);\n  request.open(\"GET\", src, true);\n  request.responseType = \"blob\";\n  request.onload = event => {\n    download(event.target.response, filename, \"image/jpg\");\n  };\n  request.send();\n};\n","import React from \"react\";\n\nimport CloseIcon from \"./CloseIcon\";\nimport DownloadIcon from \"./DownloadIcon\";\nimport { downloadPhoto } from \"../utils/photos\";\n\nconst ModalActions = ({ modalProps, currentView }) => {\n  const { onClose } = modalProps;\n\n  const onDownload = () => {\n    const downloadSource = currentView.source.download;\n    downloadPhoto(downloadSource);\n  };\n\n  return (\n    <div className=\"modal-actions\">\n      <button className=\"modal-actions__button\" onClick={onDownload}>\n        <DownloadIcon />\n      </button>\n      <button className=\"modal-actions__button\" onClick={onClose}>\n        <CloseIcon />\n      </button>\n    </div>\n  );\n};\n\nexport default ModalActions;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { InfiniteScroll } from \"react-simple-infinite-scroll\";\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\nimport Gallery from \"react-photo-gallery\";\n\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Loader from \"./Loader\";\nimport ModalActions from \"./ModalActions\";\nimport { generatePhotoUrl, loadPhoto } from \"../utils/photos\";\n\nconst TOTAL_PHOTO_COUNT = 554;\nconst PHOTOS_PER_PAGE = 20;\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [photos, setPhotos] = useState([]);\n  const [lightboxIsOpen, setLightboxIsOpen] = useState(false);\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n\n  // Fetch initial photos\n  useEffect(() => {\n    loadPhotos();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const loadPhotos = () => {\n    // Verify fetching needs to happen\n    const currentPhotoCount = photos.length;\n    if (currentPhotoCount >= TOTAL_PHOTO_COUNT || isLoading) return;\n\n    // Build the next set of photo urls\n    setIsLoading(true);\n    const nextPhotoUrls = Array(PHOTOS_PER_PAGE)\n      .fill()\n      .map((_, i) => {\n        const newPhotoId = currentPhotoCount + 1 + i;\n        if (newPhotoId <= TOTAL_PHOTO_COUNT) {\n          return generatePhotoUrl(newPhotoId);\n        }\n        return null;\n      })\n      .filter(Boolean);\n\n    // Wait for all promises to resolve\n    Promise.all(nextPhotoUrls.map(loadPhoto)).then(newPhotos => {\n      setIsLoading(false);\n      setPhotos(photos.concat(newPhotos));\n    });\n  };\n\n  const openLightbox = useCallback((event, { index }) => {\n    setCurrentPhotoIndex(index);\n    setLightboxIsOpen(true);\n  }, []);\n\n  const closeLightBox = () => {\n    setCurrentPhotoIndex(0);\n    setLightboxIsOpen(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header\n        totalPhotoCount={TOTAL_PHOTO_COUNT}\n        currentPhotoCount={photos.length}\n      />\n      <InfiniteScroll\n        throttle={100}\n        threshold={500}\n        isLoading={isLoading}\n        hasMore={photos.length < TOTAL_PHOTO_COUNT}\n        onLoadMore={loadPhotos}\n      >\n        <Gallery photos={photos} onClick={openLightbox} />\n      </InfiniteScroll>\n      {isLoading && <Loader />}\n      {photos.length === TOTAL_PHOTO_COUNT && <Footer />}\n      <ModalGateway>\n        {lightboxIsOpen && (\n          <Modal onClose={closeLightBox} closeOnEsc={false}>\n            <Carousel\n              hideControlsWhenIdle={false}\n              components={{ Footer: null, Header: ModalActions }}\n              currentIndex={currentPhotoIndex}\n              views={photos.map((photo, i) => ({\n                ...photo,\n                source: {\n                  thumbnail: photo.src,\n                  regular: generatePhotoUrl(i + 1, \"large\"),\n                  download: generatePhotoUrl(i + 1, \"original\")\n                }\n              }))}\n            />\n          </Modal>\n        )}\n      </ModalGateway>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"reset-css\";\n\nimport \"./style.css\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}